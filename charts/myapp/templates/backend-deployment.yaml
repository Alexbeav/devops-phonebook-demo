apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}-backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "myapp.fullname" . }}-backend
  template:
    metadata:
      labels:
        app: {{ include "myapp.fullname" . }}-backend
    spec:
      containers:
        - name: backend
          image: {{ .Values.backend.image }}
          ports:
            - containerPort: 5000
          resources:
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu }}
              memory: {{ .Values.backend.resources.requests.memory }}
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu }}
              memory: {{ .Values.backend.resources.limits.memory }}
          env:
            - name: DB_HOST
              value: "{{ include \"myapp.fullname\" . }}-postgresql"
            - name: DB_USER
              value: "{{ .Values.postgresql.auth.username }}"
            - name: DB_PASSWORD
              value: "{{ .Values.postgresql.auth.password }}"
            - name: DB_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: DB_PORT
              value: "5432"
          readinessProbe:
            httpGet:
              path: /api/hello
              port: 5000
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/hello
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "myapp.fullname" . }}-backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: 5000
  selector:
    app: {{ include "myapp.fullname" . }}-backend
