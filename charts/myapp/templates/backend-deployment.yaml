apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: myapp-backend
  template:
    metadata:
      labels:
        app: myapp-backend
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:16
          command: ["sh", "-c", "until pg_isready -h \"$DB_HOST\" -U \"$DB_USER\"; do sleep 2; done"]
          env:
            - name: DB_HOST
              value: "myapp-postgresql"
            - name: DB_USER
              value: "{{ .Values.postgresql.auth.username }}"
            - name: DB_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: DB_PORT
              value: "5432"
      containers:
        - name: backend
          image: {{ .Values.backend.image }}:{{ .Values.backend.tag }}
          ports:
            - containerPort: 5000
          resources:
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu }}
              memory: {{ .Values.backend.resources.requests.memory }}
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu }}
              memory: {{ .Values.backend.resources.limits.memory }}
          env:
            - name: DB_HOST
              value: "myapp-postgresql"
            - name: DB_USER
              value: "{{ .Values.postgresql.auth.username }}"
            - name: DB_PASSWORD
              value: "{{ .Values.postgresql.auth.password }}"
            - name: DB_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: DB_PORT
              value: "5432"
          # readinessProbe:
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - "pg_isready -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }} -h {{ printf "%s-postgresql" .Release.Name }} -p 5432"
          #   initialDelaySeconds: 40
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 5

          # livenessProbe:
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - "pg_isready -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }} -h {{ printf "%s-postgresql" .Release.Name }} -p 5432"
          #   initialDelaySeconds: 70
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: myapp-backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: 5000
  selector:
    app: myapp-backend
