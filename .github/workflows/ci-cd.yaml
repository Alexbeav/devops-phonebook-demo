name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.7-dind
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Get short SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get lowercase repo
        id: repo
        run: echo "repo=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Build backend Docker image
        run: |
          docker build -t ghcr.io/${{ steps.repo.outputs.repo }}/backend:${{ steps.vars.outputs.sha }} ./apps/backend
      - name: Build frontend Docker image
        run: |
          docker build -t ghcr.io/${{ steps.repo.outputs.repo }}/frontend:${{ steps.vars.outputs.sha }} ./apps/frontend
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push backend Docker image
        run: |
          docker push ghcr.io/${{ steps.repo.outputs.repo }}/backend:${{ steps.vars.outputs.sha }}
      - name: Push frontend Docker image
        run: |
          docker push ghcr.io/${{ steps.repo.outputs.repo }}/frontend:${{ steps.vars.outputs.sha }}
      - name: Trivy scan backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ steps.repo.outputs.repo }}/backend:${{ steps.vars.outputs.sha }}
      - name: Trivy scan frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ steps.repo.outputs.repo }}/frontend:${{ steps.vars.outputs.sha }}
      - name: Install dependencies (backend)
        run: |
          pip install -r apps/backend/requirements.txt
      - name: Run backend tests
        run: |
          pytest apps/backend/tests || true
      - name: Install dependencies (frontend)
        run: |
          cd apps/frontend && npm ci
      - name: Run frontend tests
        run: |
          cd apps/frontend && npm test -- --watchAll=false

      - name: Update image tag in Helm values
        run: |
          sed -i "s/tag: .*/tag: ${{ steps.vars.outputs.sha }}/" charts/myapp/values.yaml
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add charts/myapp/values.yaml
          git commit -m "Update image tag to ${{ steps.vars.outputs.sha }}"
          git push

  # deploy:
  #   needs: build-and-scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Kubeconfig
  #       uses: azure/setup-kubectl@v4
  #       with:
  #         version: 'latest'
  #     - name: Deploy via Helm
  #       run: |
  #         helm upgrade --install myapp ./charts/myapp --namespace myapp --create-namespace
